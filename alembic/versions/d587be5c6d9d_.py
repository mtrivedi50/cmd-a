"""empty message

Revision ID: d587be5c6d9d
Revises: 
Create Date: 2025-07-03 16:49:46.881747

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd587be5c6d9d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('secrets',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('type', sa.Enum('API_KEY', 'SLACK_WEB_TOKEN', 'GITHUB_ACCESS_TOKEN', name='secrettype'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('namespace', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name', 'namespace', name='unique_name_namespace')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_staff', sa.Boolean(), nullable=False),
    sa.Column('namespace', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'username'),
    sa.UniqueConstraint('id')
    )
    op.create_table('chat_models',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('provider', sa.Enum('OPENAI', 'ANTHROPIC', 'GEMINI', 'GROQ', 'MISTRAL', name='chatmodelprovider'), nullable=False),
    sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('secret_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['secret_id'], ['secrets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('integrations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('SLACK', 'JIRA', 'NOTION', 'GITHUB', name='integrationtype'), nullable=False),
    sa.Column('last_run', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('refresh_schedule', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'QUEUED', 'RUNNING', 'SUCCESS', 'FAILED', name='integrationstatus'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('secret_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['secret_id'], ['secrets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('k8s_resources',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('execution_role', sa.Enum('SCHEDULER', 'WORKER', name='executionrole'), nullable=False),
    sa.Column('resource_type', sa.Enum('DEPLOYMENT', 'CRON_JOB', 'POD', 'SERVICE', name='kubernetesresourcetype'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('parent_group_data',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('parent_group_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('SLACK_CHANNEL', 'JIRA_EPIC', 'NOTION_PAGE', 'GITHUB_REPO', name='parentgroupdatatype'), nullable=False),
    sa.Column('record_count', sa.Integer(), nullable=False),
    sa.Column('node_count', sa.Integer(), nullable=False),
    sa.Column('edge_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'QUEUED', 'RUNNING', 'SUCCESS', 'FAILED', name='integrationstatus'), nullable=False),
    sa.Column('last_run', sa.DateTime(), nullable=True),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('parent_group_id')
    )
    op.create_table('processing_jobs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'QUEUED', 'RUNNING', 'SUCCESS', 'FAILED', name='integrationstatus'), nullable=False),
    sa.Column('parent_group_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['parent_group_id'], ['parent_group_data.parent_group_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('vectors',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('vector_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parent_group_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['parent_group_id'], ['parent_group_data.parent_group_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('vector_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vectors')
    op.drop_table('processing_jobs')
    op.drop_table('parent_group_data')
    op.drop_table('k8s_resources')
    op.drop_table('integrations')
    op.drop_table('chat_models')
    op.drop_table('users')
    op.drop_table('secrets')
    # ### end Alembic commands ###
